<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <BuildOutputTargetFolder>analyzers</BuildOutputTargetFolder>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <GenerateDocumentationFile>false</GenerateDocumentationFile>
    </PropertyGroup>

    <PropertyGroup>
        <AssemblyName>Essy.DependencyManagement.Injection.Generator</AssemblyName>
        <RootNamespace>DependencyManagement.Injection.Generator</RootNamespace>
        <LangVersion>10</LangVersion>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <PropertyGroup>
        <Title>Essy.DependencyManagement.Injection.Generator</Title>
        <Version>1.4.0</Version>
        <Authors>Roma F.;Timur F.</Authors>
        <Description>
            A very fast dependency injection and component container, with many interesting features, and without reflexion.
            The Injection Generator library contains generator that generate extensions and providers for Injection library.
        </Description>
        <PackageProjectUrl>https://github.com/essy-ecosystem/dependency-management</PackageProjectUrl>
        <PackageIcon>icon-128.png</PackageIcon>
        <RepositoryUrl>https://github.com/essy-ecosystem/dependency-management.git</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageTags>di;ioc;modularity;generator</PackageTags>
        <PackageReadmeFile>ReadMe.md</PackageReadmeFile>
        <PackageLicenseFile>License.txt</PackageLicenseFile>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4-beta1.22310.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.3.0-2.final"/>
    </ItemGroup>

    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false"/>
    </ItemGroup>

    <ItemGroup>
        <None Include="..\..\Assets\icon-128.png" Pack="true" Visible="false" PackagePath=""/>
        <None Include="..\..\License.txt" Pack="true" Visible="false" PackagePath=""/>
        <None Include="..\..\ReadMe.md" Pack="true" Visible="false" PackagePath=""/>
    </ItemGroup>

    <ItemGroup>
        <Compile Include="..\DependencyManagement.Generator.Core\Discovers\ISyntaxDiscover.cs" Link="DependencyManagement.Generator.Core\Discovers\ISyntaxDiscover.cs"/>
        <Compile Include="..\DependencyManagement.Generator.Core\Extensions\CompilationProviderExtensions.cs" Link="DependencyManagement.Generator.Core\Extensions\CompilationProviderExtensions.cs"/>
        <Compile Include="..\DependencyManagement.Generator.Core\Extensions\SyntaxValueProviderExtensions.cs" Link="DependencyManagement.Generator.Core\Extensions\SyntaxValueProviderExtensions.cs"/>
        <Compile Include="..\DependencyManagement.Generator.Core\Models\TypeModel.cs" Link="DependencyManagement.Generator.Core\Models\TypeModel.cs"/>
        <Compile Include="..\DependencyManagement.Generator.Core\Transformers\ICompilationTransformer.cs" Link="DependencyManagement.Generator.Core\Transformers\ICompilationTransformer.cs"/>
        <Compile Include="..\DependencyManagement.Generator.Core\Transformers\ISyntaxTransformer.cs" Link="DependencyManagement.Generator.Core\Transformers\ISyntaxTransformer.cs"/>
        <Compile Include="..\DependencyManagement.Generator.Core\Transformers\AssemblyNameCompilationTransformer.cs" Link="DependencyManagement.Generator.Core\Transformers\AssemblyNameCompilationTransformer.cs"/>
    </ItemGroup>

</Project>
